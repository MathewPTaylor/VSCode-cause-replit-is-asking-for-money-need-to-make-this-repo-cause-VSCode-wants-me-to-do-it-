html, body {
    width: 100%;
    height: 100%;
    background-color: var(--bgcol);
    font-family: Arial, Helvetica, sans-serif;
}

:root {
    --bgcol: #111;
    --bordercol: #333;
    --bordercolselect: #666;
    --green: #538d4e;
    --yellow: #b59f3b;
    --grey: #3a3a3c; 
    --gap: 0.3rem;
}

h1 {
    font-size: 3rem;
    color: whitesmoke;
}

.main-container {
    display: flex;
    position: relative;
    justify-content: center;
    /* background-color: green; */
}

.game-grid {
    display: grid;
    position: relative;
    width: calc((4rem * 5) + var(--gap) * 5);
    aspect-ratio: 5/6;
    grid-template-columns: repeat(auto-fit, minmax(2em, 4em));
    grid-template-rows: repeat(auto-fit, minmax(2em, 4em));
    gap: var(--gap);
}

.game-square {
    display: flex;
    position: relative;
    color: #fff;
    background-color: var(--bgcol);
    border: 0.1rem solid var(--bordercol);
    font-size: 2.2em;
    font-weight: bolder;
    justify-content: center;
    align-items: center;
    transition: 0.2s;
}

.correct {
    background-color: var(--green);
    border-color: var(--green);
}

.present {
    background-color: var(--yellow);
    border-color: var(--yellow);
}

.absent {
    background-color: var(--grey);
    border-color: var(--grey);
}

@keyframes select {
    0% {

    }

    50% {
        scale: 1.05;
    }

    100% {
        scale: 1;
        border-color: var(--bordercolselect);
    }
}

.selected-square {
    animation-name: select;
    animation-duration: 0.15s;
    animation-fill-mode: both;
    /*border-color: var(--bordercolselect);*/
}


@keyframes reveal {
    0% {
        transform: rotateX(0deg);
        /* border-color: var(--bordercolselect); */
    }

    50% {
        transform: rotateX(90deg);
    }

    100% {
        transform: rotateX(0deg);
    }
}

.reveal {
    animation-name: reveal;
    animation-duration: 0.7s;
    animation-timing-function: ease;
    animation-fill-mode: forwards;
}

@keyframes shimmy {
    25% {
        transform: translateX(-10%);
    }

    50% {
        transform: translateX(10%);
    }

    100% {
        transform: translateX(0%);
    }
}

.not-word {
    animation-name: shimmy;
    animation-duration: 0.2s;
    animation-iteration-count: 1;
    animation-fill-mode: both;
    border-color: var(--bordercolselect);
}

@keyframes giddy {
    25% {
        transform: translateY(-35%);
    }

    50% {
        transform: translateY(15%);
    }

    75% {
        transform: translateY(-20%);
    }

    100%{
        transform: translateY(0%);
    }
}

/* .win {
    animation-name: giddy;
    animation-duration: 350ms;
    animation-delay:
    square.style.animationName = "giddy";
            let duration = 350;
            square.style.animationDuration = duration + "ms";
            square.style.animationDelay = i * (duration / 5) + "ms";
} */

.popup-wrapper {
    display: block;
    position: absolute;
    left: 50%;
    transform: translate(-44%, -10px);
    /*background-color: green;*/
    z-index: 1;
}

.popup {
    display: block;
    position: relative;
    background-color: white;
    border-radius: 0.3em;
    padding: 0.7em;
    margin-bottom: 0.5em;
    font-size: 1em;
    font-weight: bold;
    transition: 0.3s ease;
}

.keyboard-wrapper {
    display: block;
    position: relative;
    width: 35em;
    left: 50%;
    transform: translateX(-50%);
    margin-top: 1em;
}

.key {
    display: inline-block;
    position: relative;
    width: 2em;
    background-color: grey;
    color: white;
    font-size: 1.5em;
    padding: 0.7em 0em;
    margin: 0em 0.1em 0.3em 0.1em;
    border-radius: 0.15em;
    font-weight: 600;
    text-align: center;
}

.key:hover {
    cursor: pointer;
}

.keyboard-row {
    display: flex;
    justify-content: center;
}

.special-key {
    width: auto;
    font-size: 1.4em;
    padding-top: 0.77em;
    padding-left: 0.4em;
    padding-right: 0.4em;
}